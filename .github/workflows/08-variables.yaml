name: 08 - Using Variables

on:
  push:
  workflow_dispatch:
env:
  WORKFLOW_VAR: "I am a workflow var"
  OVERWRITTEN: "I will be overwritten"
  UNDEFINED_VAR_WITH_DEFAULTS: ${{ vars.UNDEFINED_VAR || 'default value' }}
jobs:
  echo:
    runs-on: ubuntu-latest
    env:
      JOB_VAR: "I am job env var"
      OVERWRITTEN: "I have been overwritten by job"
    steps:
      - name: Print env variables
        env:
          STEP_VAR: "I am a step env var"
          step_var2: "I am another step var"
        run: |
          echo "Step env var: ${{ env.STEP_VAR }}"
          echo "Step env var 2: $step_var2" 
          echo "Job env var: ${{ env.JOB_VAR }}"
          echo "Workflow env var: ${{ env.WORKFLOW_VAR }}"
          echo "Overwritten env var: ${{ env.OVERWRITTEN }}"
      - name: Overwrite job variable
        env:
          OVERWRITTEN: "I have been overwritten at step level"
        run: |
          echo "Step env var: ${{ env.OVERWRITTEN }}"
  echo2:
    runs-on: ubuntu-latest
    steps:
      - name: Print variables
        run: |
          echo "Org var: ${{ vars.ORG_VAR }}"
          echo "Org Overwritten var: ${{ vars.OVERWRITTEN_VAR }}" 
          echo "Repo var: ${{ vars.REPOSITORY_VAR }}"
  echo-prod:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Print Prod variables
        run: |
          echo "Org var: ${{ vars.ORG_VAR }}"
          echo "Org Overwritten var: ${{ vars.OVERWRITTEN_VAR }}" 
          echo "Repo var: ${{ vars.REPOSITORY_VAR }}"
          echo "Environment var: ${{ vars.TARGET_VAR }}"
  echo-undefined:
    runs-on: ubuntu-latest
    steps:
      - name: Print Undefined variables
        run: |
          echo "Org var: ${{ env.UNDEFINED_VAR_WITH_DEFAULTS }}"
